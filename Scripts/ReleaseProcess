Generating release packages and updating source control (git)

- Check that the version set in AssemblyInfo.cs is correct for the next release
- Rebuild project
- Run the unit tests in Test/, they should all pass (or you should know why
  a given test isn't passing)
- Make sure all outstanding changes are checked in
- Tag trunk as the release, ex.
  git tag -a SharpPcap_X_Y_Z
- Push tags to the server
  git push --tags
- Run build_release ~/sharppcap_releases X.Y.Z X.Y.Z+1
- Edit ~/sharppcap_releases/SharpPcap_X.Y.Z+1_ReleaseNotes.txt with any additional
  notes about the changes in the newly released version


Pushing changes out to the world

- Go to the github project page
- Click	on the 'releases' tab
- Click	on 'Draft a new	release'
- Select the release tag from the dropdown
- Use the new version as the release name
- Copy the release notes file content into the text box
- Attach the .zip of the binary release to the release
